%Load Undorded without FML

if exist('C:\Users\Gary\Documents\School Notes\Grad School\','dir')
    projpath = 'C:\Users\Gary\Documents\School Notes\Grad School\';
elseif exist('F:\Documents\School notes\Grad School\','dir');
    projpath = 'F:\Documents\School notes\Grad School\';
end
expname = 'Mass';
% if strcmp(DataSetsSelect,'Pilot')
%     datafolder = [projpath expname filesep 'Pilot_data'];
% elseif strcmp(DataSetsSelect,'Not_Pilot')
    datafolder = [projpath expname filesep 'Data'];
% end

projpath = 'D:\Users\Gary\Google Drive\';

expname = 'Preferred Mass';

expfolder= [projpath expname];
addpath([projpath filesep expname filesep 'mfiles']);
expfolder= [projpath expname];
addpath([projpath filesep expname filesep 'mfiles']);
cd(expfolder);
% if exist('Data')~=1
%     cd('D:\Users\Gary\Google Drive\Preferred Mass\Data');
%     load('2018Data-UnorderednoFML_test.mat')
%     cd('D:\Users\Gary\Google Drive\Preferred Mass');
% end
% cd('E:\Documents\Google Drive\Preferred Mass');

% fileID=fopen('VeloctiybyTrial_avg2.csv','w');
% fileID=fopen('NewData_noFML.csv','w');
if exist('excel_file')~=1
    excel_file = 'NewData_noFML.csv';
end
% excel_file = 'FullData_SmallTargetnoFML_test.csv';
% excel_file = 'FullData_PilotnoFML.csv';
fileID=fopen(excel_file,'w');
fprintf('Writing data to: %s\n',excel_file);

TrialCutoff=popts.totaltrials-nTrials_speed+1;

order(1)=3;
order(2)=2;
order(3)=1;
order(4)=4;
order(5)=5;
order(6)=6;
order(7)=1;
order(8)=2;
order(9)=3;
order(10)=4;
order(11)=5;
order(12)=6;
order(13)=1;
order(14)=2;
order(15)=4;
order(16)=3;
order(17)=5;
order(18)=6;

delcount=0;

A={'subj'...
    ',condition'...
    ',delcond'...
    ',order'...
    ',targetnum'...%5
    ',trial'...
    ',trialtot'...
    ',odd_trial'...
    ',movedur'...
    ',react1_dist'...%10    
    ',react1_vel'...
    ',pathltar'...
    ',pathlall'...
    ',maxex'...
    ',avevel_target'...%15
    ',peakvel_target'...
    ',peakvel_target_vsign'...
    ',avevel_all'...
    ',peakvel_all'...
    ',peakvel_radv'...%20
    ',missangle'...
    ',absmissangle'...
    ',reaction_tanv'...
    ',reaction_tanvel'...
    ',miss_dist'...%25
    ',miss_rad'...
    ',endpt_vel'...
    ',endpt_tanvel'...
    ',reacttotar_frames'...
    ',tar_vel'...%30
    ',miss_dist'...
    ',miss_vel'...
    ',wait4mvt'...
    ',idxonset'...
    ',idxonset3'...%35
    ',idxpeakv'...
    ',idxendpt'...
    ',idxmoveback'...
    ',idxcrossing'...
    ',starttopeak'...%40 
    ',peaktoend'...
    ',react3_dist'...   
    ',react3_vel'...
    ',vthres_onset'...
    ',vthres_endpt'...%45
    ',endx'...
    ',endy'...
    ',sumVx'...
    ',sumVy'...
    ',sumVx_pdiff'...%50
    ',sumVy_pdiff'... 
    ',sumVx_orig'...
    ',sumVy_orig'...
    ',target_x'...
    ',target_y'... %55
    ',end_x'...
    ',end_y'...
    ',idxtargetshow'...
    ',idxonsetErik'...
    ',onsetErik_vel'...
    ',onsetvthresh_vel'...
    };


%     'reacttotar_frames2 ' 'reacttotar_frames2V '...
%     'reacttotar_frames3 ' 'reacttotar_frames3V '...
% csvwrite('NewData_noFML_test.csv',A);
fprintf(fileID,'%s',A{:});
% fprintf(fileID,A);
fprintf(fileID,'\n');


for subj=1:nsubj
    
    subjid = subjarray{subjtoload(subj)};
    tr_count=1;
        
    for c=1:(nc) %Check if using FML or not

        condition_cur=char(conditions{subj}(c));
%         condition_cur=char(conditions{c});

        if c>=2
            condition_prev=char(conditions{subj}(c));
        end

        if strcmp(condition_cur,'fml')
            condition_cur=0;
            condition_cur1=0;
        elseif strcmp(condition_cur,'0')
            condition_cur=0;
            condition_cur1=0;
        elseif strcmp(condition_cur,'3')
            condition_cur=3;
            condition_cur1=3;
        elseif strcmp(condition_cur,'5')
            condition_cur=5;
            condition_cur1=5;
        elseif strcmp(condition_cur,'8')
            condition_cur=8;
            condition_cur1=8;
        elseif strcmp(condition_cur,'0f')
            condition_cur=0;
            condition_cur1=10;
        end

        if c==1
            condition_prev=0;
        end

        if strcmp(condition_prev,'fml')
            condition_cur=0;
            condition_cur1=0;
        elseif strcmp(condition_prev,'0')
            condition_prev=0;
        elseif strcmp(condition_prev,'3')
            condition_prev=3;
        elseif strcmp(condition_prev,'5')
            condition_prev=5;
        elseif strcmp(condition_prev,'8')
            condition_prev=8;
        elseif strcmp(condition_prev,'0f')
            condition_prev=0;                
        end

        delcount=delcount+1;

        delta_condition=condition_cur-condition_prev;
        delta_condition1(delcount)=condition_cur-condition_prev;

        
        for i=1:size(Data{c,subj}.x,2)
            %This A is for Everything
%             if Data{c,subj}.goodtrial(i) == 1
            if mod(i,2) == 0
                odd_trial = 0;
            else
                odd_trial = 1;
            end
            [~,idxpeakv] = max(Data{c,subj}.v(MT{c,subj}.idxonset(i):end,i)); 
            idxpeakv = idxpeakv + MT{c,subj}.idxonset(i);
            
            Vx = diff(Data{c,subj}.x(:,i))/0.005;
            Vy = diff(Data{c,subj}.y(:,i))/0.005;
            
            A={subj...
                ,condition_cur...
                ,delta_condition1(delcount)...
                ,order(subj)...
                ,Data{c,subj}.targetnumber(i)...%5
                ,i...
                ,tr_count...
                ,odd_trial...
                ,Data{c,subj}.timings.reacttoendpt(i)...
                ,Data{c,subj}.P_abs(MT{c,subj}.idxonset(i),i)...%10
                ,Data{c,subj}.v(MT{c,subj}.idxonset(i),i)...
                ,Data{c,subj}.pathlength.totarget(i)...
                ,Data{c,subj}.pathlength.all(i)...
                ,max(Data{c,subj}.P_abs(:,i))...
                ,Data{c,subj}.avevel.totarget(i)...%15
                ,Data{c,subj}.peakvel.totarget(i)...
                ,MT{c,subj}.peakvy(i)...
                ,Data{c,subj}.avevel.all(i)...
                ,Data{c,subj}.peakvel.all(i)...
                ,Data{c,subj}.peakvel.RadV(i)...%20
                ,Data{c,subj}.miss_angle(i)...
                ,abs(Data{c,subj}.miss_angle(i))...
                ,Data{c,subj}.reaction_tanv(i)...
                ,Data{c,subj}.TanV(MT{c,subj}.idxonset(i),i)...
                ,Data{c,subj}.miss_dist(i)...%25
                ,Data{c,subj}.P_abs(MT{c,subj}.idxendpt(i),i)...
                ,Data{c,subj}.v_sign(MT{c,subj}.idxendpt(i),i)...
                ,Data{c,subj}.TanV(MT{c,subj}.idxendpt(i),i)...
                ,MT{c,subj}.idxtarget(i)-MT{c,subj}.idxonset(i)...
                ,Data{c,subj}.v(MT{c,subj}.idxtarget(i),i)...%30
                ,Data{c,subj}.miss_dist(i)...
                ,Data{c,subj}.v(MT{c,subj}.idxendpt(i),i)...
                ,MT{c,subj}.robotstates.wait4mvt(i)...
                ,MT{c,subj}.idxonset(i)...
                ,MT{c,subj}.idxonset3(i)...%35
                ,idxpeakv...
                ,MT{c,subj}.idxendpt(i)...
                ,MT{c,subj}.idxmoveback(i)...
                ,MT{c,subj}.idxcrossing(i)...
                ,idxpeakv-MT{c,subj}.idxonset(i)...%40
                ,MT{c,subj}.idxendpt(i)-idxpeakv...
                ,Data{c,subj}.P_abs(MT{c,subj}.idxonset3(i),i)...
                ,Data{c,subj}.v(MT{c,subj}.idxonset3(i),i)...
                ,MT{c,subj}.idxvthresh_onset(i)...
                ,MT{c,subj}.idxvthresh_endpt(i)...%45
                ,Data{c,subj}.x(MT{c,subj}.idxmoveback(i),i)...
                ,Data{c,subj}.y(MT{c,subj}.idxmoveback(i),i)...
                ,sum(Data{c,subj}.vx(~isnan(Data{c,subj}.vx(:,i)),i))*0.005...
                ,sum(Data{c,subj}.vy(~isnan(Data{c,subj}.vx(:,i)),i))*0.005...
                ,sum(Vx(~isnan(Vx)))*0.005...%50
                ,sum(Vy(~isnan(Vx)))*0.005... 
                ,sum(Data{c,subj}.vx_orig(~isnan(Data{c,subj}.vx_orig(:,i)),i))*0.005...
                ,sum(Data{c,subj}.vy_orig(~isnan(Data{c,subj}.vx_orig(:,i)),i))*0.005...
                ,Data{c,subj}.targetposition_act(i,1)...
                ,Data{c,subj}.targetposition_act(i,2)...%55
                ,Data{c,subj}.x(MT{c,subj}.idxendpt(i),i)...
                ,Data{c,subj}.y(MT{c,subj}.idxendpt(i),i)...
                ,MT{c,subj}.idxwait4mvt(i)...
                ,MT{c,subj}.idxonsetErik(i)...
                ,Data{c,subj}.TanV(MT{c,subj}.idxonsetErik(i),i)...
                ,Data{c,subj}.TanV(MT{c,subj}.idxvthresh_onset(i),i)...
                };
%                     MT{c,subj}.idxtarget2(i)-MT{c,subj}.idxonset(i) Data{c,subj}.v(MT{c,subj}.idxtarget2(i),i)...
%                     MT{c,subj}.idxtarget3(i)-MT{c,subj}.idxonset(i) Data{c,subj}.v(MT{c,subj}.idxtarget3(i),i)...
                dlmwrite(excel_file,A,'-append')
                %fprintf(fileID,'%f ',A);
%                 fprintf(fileID,'\n');
%             end
            tr_count=tr_count+1;                
        end
    end
end

fclose(fileID);
close all
close all
close all
close all
close all
close all
close all